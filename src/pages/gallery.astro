---
import Layout from '../layouts/Layout.astro';

const images = [
    { src: '/Andre1.0.jpg', alt: 'Andre', caption: 'Meu Amor' },
    { src: '/barbara1.0.jpeg', alt: 'Barbara', caption: 'Meu Tudo' },
    { src: '/couple1.jpg', alt: 'Us Together', caption: 'N贸s Juntos' },
    { src: '/couple2.jpg', alt: 'Romantic Moment', caption: 'Mem贸rias do P么r do Sol' },
    { src: '/couple3.jpg', alt: 'Adventure', caption: 'Explorando Juntos' }
];
---

<Layout title="Andre & Barbara: Nossa Galeria">
    <main class="gallery-page">
        <section class="hero-section">
            <div class="hero-overlay"></div>
            <div class="hero-content">
                <h1>A Nossa Galeria de Amor</h1>
                <p class="hero-subtitle">Cada foto conta uma hist贸ria</p>
            </div>
        </section>

        <section class="gallery-container">
            <div class="gallery-grid">
                {images.map((image, index) => (
                    <div class="gallery-item">
                        <div class="image-wrapper">
                            <img src={image.src} alt={image.alt} class="gallery-image" onclick={`openLightbox(${index})`} />
                            <div class="image-overlay">
                                <p class="image-caption">{image.caption}</p>
                                <button class="view-btn" onclick={`openLightbox(${index})`}>Ver Foto</button>
                            </div>
                        </div>
                    </div>
                ))}
            </div>
        </section>
    </main>

    <div id="lightbox" class="lightbox" onclick="closeLightbox()">
        <span class="close">&times;</span>
        <button class="nav-btn prev" onclick="event.stopPropagation(); navigateImage(-1)">&lt;</button>
        <button class="nav-btn next" onclick="event.stopPropagation(); navigateImage(1)">&gt;</button>
        <div class="lightbox-content">
            <img class="lightbox-image" id="lightbox-img" onload="this.style.opacity='1'" />
            <div class="image-counter" id="image-counter"></div>
            <div class="loading-spinner" id="loading-spinner"></div>
            <p class="lightbox-caption" id="lightbox-caption"></p>
        </div>
    </div>
</Layout>

<script>
    const galleryImages = Array.from(document.querySelectorAll('.gallery-image')).map(img => ({
        src: img.getAttribute('src'),
        alt: img.getAttribute('alt'),
        caption: img.closest('.gallery-item').querySelector('.image-caption').textContent
    }));

    let currentImageIndex = 0;

    function openLightbox(index) {
        currentImageIndex = index;
        document.getElementById('lightbox').style.display = 'block';
        document.body.style.overflow = 'hidden';
        updateLightboxImage();
    }

    function updateLightboxImage() {
        const lightboxImg = document.getElementById('lightbox-img');
        const spinner = document.getElementById('loading-spinner');
        const counter = document.getElementById('image-counter');
        const caption = document.getElementById('lightbox-caption');
        
        if (!lightboxImg || !spinner || !counter || !caption) return;
        
        lightboxImg.style.opacity = '0';
        spinner.style.display = 'block';
        
        const currentImage = galleryImages[currentImageIndex];
        if (currentImage) {
            lightboxImg.setAttribute('src', currentImage.src);
            lightboxImg.setAttribute('alt', currentImage.alt);
            counter.textContent = `${currentImageIndex + 1} / ${galleryImages.length}`;
            caption.textContent = currentImage.caption;
        }
    }

    function navigateImage(direction) {
        currentImageIndex = (currentImageIndex + direction + galleryImages.length) % galleryImages.length;
        updateLightboxImage();
    }

    function closeLightbox() {
        const lightbox = document.getElementById('lightbox');
        if (lightbox) {
            lightbox.style.display = 'none';
            document.body.style.overflow = 'auto';
        }
    }

    document.addEventListener('keydown', (e) => {
        const lightbox = document.getElementById('lightbox');
        if (lightbox && lightbox.style.display === 'block') {
            if (e.key === 'ArrowLeft') navigateImage(-1);
            if (e.key === 'ArrowRight') navigateImage(1);
            if (e.key === 'Escape') closeLightbox();
        }
    });
</script>

<style>
    :root {
        --deep-red: #8B0000;
        --rich-crimson: #DC143C;
        --elegant-burgundy: #800020;
        --love-pink: #FFB6C1;
        --romantic-pink: #FFC0CB;
    }

    .gallery-page {
        max-width: 1200px;
        margin: 0 auto;
    }

    .hero-section {
        position: relative;
        height: 80vh;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        color: var(--elegant-burgundy);
        margin-bottom: 4rem;
        border-radius: 20px;
        overflow: hidden;
        background: linear-gradient(135deg, var(--love-pink), var(--romantic-pink));
        box-shadow: 0 10px 30px rgba(255, 182, 193, 0.4);
    }

    .hero-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.2);
        backdrop-filter: blur(3px);
    }

    .hero-content {
        position: relative;
        z-index: 1;
        animation: floatIn 1.5s ease-out;
    }

    .hero-content h1 {
        font-size: 4rem;
        color: white;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        margin-bottom: 1rem;
        opacity: 0;
        animation: fadeIn 0.8s ease-out forwards;
    }

    .hero-subtitle {
        font-size: 1.8rem;
        color: white;
        opacity: 0;
        animation: fadeIn 0.8s ease-out forwards 0.3s;
    }

    .gallery-container {
        padding: 2rem;
        margin-bottom: 4rem;
    }

    .gallery-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 2rem;
        opacity: 0;
        animation: fadeIn 1s ease-out forwards 0.5s;
    }

    .gallery-item {
        position: relative;
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .gallery-item:hover {
        transform: translateY(-10px);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
    }

    .image-wrapper {
        position: relative;
        width: 100%;
        height: 400px;
    }

    .gallery-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }

    .gallery-item:hover .gallery-image {
        transform: scale(1.1);
    }

    .image-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        background: linear-gradient(to top, rgba(0,0,0,0.8), transparent);
        padding: 2rem;
        transform: translateY(100%);
        transition: transform 0.3s ease;
    }

    .gallery-item:hover .image-overlay {
        transform: translateY(0);
    }

    .image-caption {
        color: white;
        font-size: 1.2rem;
        margin-bottom: 1rem;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
    }

    .view-btn {
        background: linear-gradient(135deg, var(--love-pink), var(--romantic-pink));
        border: none;
        padding: 0.8rem 1.5rem;
        color: white;
        border-radius: 25px;
        cursor: pointer;
        font-size: 1rem;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .view-btn:hover {
        transform: scale(1.05);
        box-shadow: 0 5px 15px rgba(255, 182, 193, 0.4);
    }

    .lightbox {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.95);
        backdrop-filter: blur(5px);
    }

    .lightbox-content {
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100%;
    }

    .lightbox-image {
        max-height: 80vh;
        max-width: 90vw;
        object-fit: contain;
        opacity: 0;
        transition: opacity 0.3s ease;
        border-radius: 10px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    }

    .lightbox-caption {
        color: white;
        font-size: 1.5rem;
        margin-top: 1rem;
        text-align: center;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
    }

    .close {
        position: absolute;
        right: 30px;
        top: 30px;
        color: white;
        font-size: 40px;
        cursor: pointer;
        z-index: 1001;
        transition: transform 0.2s ease;
    }

    .close:hover {
        transform: scale(1.2);
    }

    .nav-btn {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background: linear-gradient(135deg, var(--love-pink), var(--romantic-pink));
        border: none;
        color: white;
        padding: 1rem 1.5rem;
        cursor: pointer;
        font-size: 1.5rem;
        border-radius: 50%;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        z-index: 1001;
    }

    .nav-btn:hover {
        transform: translateY(-50%) scale(1.1);
        box-shadow: 0 5px 15px rgba(255, 182, 193, 0.4);
    }

    .prev {
        left: 30px;
    }

    .next {
        right: 30px;
    }

    .image-counter {
        position: absolute;
        bottom: 30px;
        left: 50%;
        transform: translateX(-50%);
        color: white;
        font-size: 1.2rem;
        background: rgba(0, 0, 0, 0.5);
        padding: 0.5rem 1rem;
        border-radius: 20px;
    }

    .loading-spinner {
        display: none;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 50px;
        height: 50px;
        border: 4px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        border-top-color: white;
        animation: spin 1s linear infinite;
    }

    @keyframes spin {
        to { transform: translate(-50%, -50%) rotate(360deg); }
    }

    @keyframes floatIn {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }

    @media (max-width: 768px) {
        .hero-content h1 {
            font-size: 3rem;
        }

        .hero-subtitle {
            font-size: 1.4rem;
        }

        .gallery-grid {
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        }

        .image-wrapper {
            height: 300px;
        }

        .nav-btn {
            padding: 0.8rem 1.2rem;
            font-size: 1.2rem;
        }

        .prev {
            left: 15px;
        }

        .next {
            right: 15px;
        }
    }
</style>
