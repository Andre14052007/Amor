---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Tempo Juntos">
    <div class="time-together-container">
        <section class="hero-section">
            <div class="hero-content">
                <h1>Amando-nos um ao outro desde:</h1>
                <h2>3 de Novembro de 2023</h2>
                <p class="hero-subtitle">Uma jornada de amor e paixão</p>
            </div>
        </section>

        <section class="days-loving-container">
            <h3>Cada dia que passa amamo-nos mais.</h3>
            <p id="days-loving" class="counter"><span id="days-count">0</span> dias de amor e carinho</p>
        </section>

        <section class="next-milestone">
            <h3>Próximo Marco Importante:</h3>
            <div class="countdown-container">
                <div class="countdown-item">
                    <span id="months">0</span>
                    <label>Meses</label>
                </div>
                <div class="countdown-item">
                    <span id="days">0</span>
                    <label>Dias</label>
                </div>
                <div class="countdown-item">
                    <span id="hours">0</span>
                    <label>Horas</label>
                </div>
                <div class="countdown-item">
                    <span id="minutes">0</span>
                    <label>Minutos</label>
                </div>
                <div class="countdown-item">
                    <span id="seconds">0</span>
                    <label>Segundos</label>
                </div>
            </div>
            <p class="milestone-text">2 anos juntinhos!</p>
        </section>
    </div>
</Layout>

<script>
    const startDate = new Date(2023, 10,2);
    const today = new Date();
    const timeDifference = today.getTime() - startDate.getTime();
    const daysLoving = Math.floor(timeDifference / (1000 * 60 * 60 * 24));
    
    // Animate days count
    const daysCountElement = document.getElementById('days-count');
    if (daysCountElement) {
        let currentCount = 0;
        const duration = 2000; // 2 seconds
        const increment = daysLoving / (duration / 16); // 60fps
        
        const animate = () => {
            currentCount = Math.min(currentCount + increment, daysLoving);
            daysCountElement.innerText = Math.floor(currentCount).toString();
            
            if (currentCount < daysLoving) {
                requestAnimationFrame(animate);
            }
        };
        
        // Start animation when element is in view
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    animate();
                    observer.disconnect();
                }
            });
        });
        
        observer.observe(daysCountElement);
    }

    // Countdown to 2 years
    const twoYearsDate = new Date(2025, 10, 3); // November 3rd, 2025
    
    function updateCountdown() {
        const now = new Date();
        const difference = Math.max(0, twoYearsDate.getTime() - now.getTime());
        
        if (difference > 0) {
            const days = Math.floor(difference / (1000 * 60 * 60 * 24));
            const months = Math.floor(days / 30);
            const remainingDays = days % 30;
            const hours = Math.floor((difference % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60));
            const seconds = Math.floor((difference % (1000 * 60)) / 1000);
            
            document.getElementById('months').innerText = months.toString().padStart(2, '0');
            document.getElementById('days').innerText = remainingDays.toString().padStart(2, '0');
            document.getElementById('hours').innerText = hours.toString().padStart(2, '0');
            document.getElementById('minutes').innerText = minutes.toString().padStart(2, '0');
            document.getElementById('seconds').innerText = seconds.toString().padStart(2, '0');
        }
    }

    updateCountdown();
    setInterval(updateCountdown, 1000); // Update every second
</script>

<style>
    :root {
        --deep-red: #8B0000;
        --rich-crimson: #DC143C;
        --elegant-burgundy: #800020;
        --love-pink: #FFB6C1;
        --romantic-pink: #FFC0CB;
    }

    .time-together-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    .hero-section {
        position: relative;
        height: 60vh;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        background: linear-gradient(135deg, var(--love-pink), var(--romantic-pink));
        margin-bottom: 4rem;
        border-radius: 15px;
        overflow: hidden;
    }

    .hero-content {
        position: relative;
        z-index: 1;
        animation: floatIn 1.5s ease-out;
    }

    .hero-content h1 {
        font-size: 3rem;
        color: white;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        margin-bottom: 1rem;
        opacity: 0;
        animation: fadeIn 0.8s ease-out forwards;
    }

    .hero-content h2 {
        font-size: 4rem;
        color: var(--rich-crimson);
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
        margin-bottom: 1.5rem;
        opacity: 0;
        animation: fadeIn 0.8s ease-out forwards 0.3s;
    }

    .hero-subtitle {
        font-size: 1.8rem;
        color: white;
        opacity: 0;
        animation: fadeIn 0.8s ease-out forwards 0.6s;
    }

    .days-loving-container {
        text-align: center;
        padding: 4rem;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 15px;
        backdrop-filter: blur(10px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        margin-bottom: 4rem;
    }

    .days-loving-container h3 {
        font-size: 2rem;
        color: var(--elegant-burgundy);
        margin-bottom: 2rem;
        opacity: 0;
        animation: fadeIn 0.8s ease-out forwards;
    }

    .counter {
        font-size: 4rem;
        color: var(--rich-crimson);
        font-weight: bold;
        opacity: 0;
        animation: fadeIn 0.8s ease-out forwards 0.3s;
    }

    #days-count {
        display: inline-block;
        background: linear-gradient(45deg, var(--rich-crimson), var(--elegant-burgundy));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        padding: 0 1rem;
    }

    .next-milestone {
        text-align: center;
        padding: 4rem;
        background: white;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .next-milestone h3 {
        font-size: 2rem;
        color: var(--elegant-burgundy);
        margin-bottom: 2rem;
        opacity: 0;
        animation: fadeIn 0.8s ease-out forwards;
    }

    .countdown-container {
        display: flex;
        justify-content: center;
        gap: 2rem;
        margin: 2rem 0;
        flex-wrap: wrap;
    }

    .countdown-item {
        background: linear-gradient(135deg, var(--love-pink), var(--romantic-pink));
        padding: 2rem;
        border-radius: 15px;
        min-width: 120px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        animation: bounceIn 0.8s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
        opacity: 0;
    }

    .countdown-item:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }

    .countdown-item span {
        display: block;
        font-size: 3rem;
        color: white;
        text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
        margin-bottom: 0.5rem;
    }

    .countdown-item label {
        font-size: 1.2rem;
        color: white;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
    }

    .milestone-text {
        font-size: 2rem;
        color: var(--rich-crimson);
        margin-top: 2rem;
        opacity: 0;
        animation: fadeIn 0.8s ease-out forwards 1s;
    }

    @keyframes floatIn {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }

    @keyframes bounceIn {
        0% {
            opacity: 0;
            transform: scale(0.3);
        }
        50% {
            opacity: 0.9;
            transform: scale(1.1);
        }
        80% {
            opacity: 1;
            transform: scale(0.89);
        }
        100% {
            opacity: 1;
            transform: scale(1);
        }
    }

    @media (max-width: 768px) {
        .hero-content h1 {
            font-size: 2rem;
        }

        .hero-content h2 {
            font-size: 3rem;
        }

        .hero-subtitle {
            font-size: 1.4rem;
        }

        .countdown-container {
            gap: 1rem;
        }

        .countdown-item {
            min-width: 100px;
            padding: 1.5rem;
        }

        .countdown-item span {
            font-size: 2.5rem;
        }

        .countdown-item label {
            font-size: 1rem;
        }
    }
</style>
